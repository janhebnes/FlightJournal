@using FlightJournal.Web.Extensions
@model IEnumerable<FlightJournal.Web.Models.Training.Predefined.Grading>

@{
    ViewBag.Title = _("Gradings");
}

<h2>@_("Gradings")</h2>
<hr/>
<p>
    @Html.ActionLink(_("Create"), "Create", null, new { @class = "btn btn-primary"})
</p>
<table class="table table-striped table-hover table-condensed">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Value)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsOk)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppliesToBriefingOnlyPartialExercises)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppliesToPracticalPartialExercises)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GradingIdForExport)
        </th>
        <th></th>
        <th></th>
    </tr>
    @{
        var ordered = Model.OrderBy(x => x.DisplayOrder).ToList();
        for (var n = 0; n < ordered.Count; n++)
        {
            var item = ordered[n];

        <tr>
            <td>@item.Value</td>
            <td>@item.Name</td>
            <td class="display-field">@Html.DisplayFor(modelItem => item.IsOk)</td>
            <td class="display-field">@Html.DisplayFor(modelItem => item.AppliesToBriefingOnlyPartialExercises)</td>
            <td class="display-field">@Html.DisplayFor(modelItem => item.AppliesToPracticalPartialExercises)</td>
            <td>@item.GradingIdForExport</td>
            <td>
                <div class="btn-group btn-group-sm">
                    @Html.ActionLink(_("Edit"), "Edit", new { id = item.GradingId }, new { @class = "btn btn-default" })
                    @Html.ActionLink(_("Details"), "Details", new { id = item.GradingId}, new { @class = "btn btn-default" })
                    @if (ViewBag.CanDelete[item.GradingId])
                    {
                        @Html.ActionLink(_("Delete"), "Delete", new { id = item.GradingId }, new { @class = "btn btn-default" })
                    }
                    else
                    {
                        @Html.Raw(HtmlHelpers.InUseCannotDeleteAlert())
                    }
                </div>
            </td>
            <td>
                <div class="btn-group btn-group-sm">
                    @if (n > 0)
                    {
                        <a href="@Url.Action("SwapOrder", new { itemId1 = ordered[n].GradingId, itemId2 = ordered[n - 1].GradingId})" class="btn btn-default"><i class='fa fa-sort-up'></i></a>
                    }
                    @if (n < ordered.Count - 1)
                    {
                        <a href="@Url.Action("SwapOrder", new { itemId1 = ordered[n].GradingId, itemId2 = ordered[n + 1].GradingId })" class="btn btn-default"><i class='fa fa-sort-down'></i></a>
                    }
                </div>
            </td>
        </tr>
        }
    }

</table>
