@using FlightJournal.Web.Controllers
@using FlightJournal.Web.Extensions
@using FlightJournal.Web.Models
@model FlightJournal.Web.Models.GridViewModel

<table class="table table-responsive table-striped table-hover table-condensed @ViewData["tableclass"]">
    <thead>
        <tr>
            <th>
            </th>
            <th>
            </th>
            <th>
                @_("Plane")
            </th>
            <th>
                @_("Pilot(s)")
            </th>
            <th>
                @_("Departure")
            </th>
            <th>
                @_("Landing")
            </th>
            <th>
                @_("Duration")
            </th>
            <th class="hidden-sm">
                @_("Take-off")
            </th>
            <th class="hidden-sm">
                @_("Tacho")
            </th>
            <th class="hidden-xs">
                @_("Comment")
            </th>
            <th class="hidden-print">
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Flights)
        {
            var style = new HtmlString(string.Empty);
            var trainingStatus = Model.TrainingBarometers.TryGetValue(item.PilotId, out var ts) ? ts : LogbookController.GetTrainingBarometer(Enumerable.Empty<Flight>().AsQueryable());
            var trainingStatusIndicator =  Html.Raw($"<span style='background-color:{trainingStatus.BarometerColorCode};'>&nbsp;</span>");

            if (item.Deleted.HasValue)
            {
                style = new HtmlString("style=\"text-decoration: line-through;\"");
            }
            <tr class="flightrow" data-flightid="@item.FlightId">
                <td>
                    @if (!item.Deleted.HasValue)
                    {
                        @*var startNr1 = startNr;
            if (item.LandingCount > 1)
            {
                startNr = startNr - item.LandingCount + 1;
                @(startNr)
                <text> - </text>
            }
            @(startNr1)
            startNr--;*@
                        if (item.Departure == null)
                        {
                            <span class="fa fa-pause"></span>
                        }
                        else if (item.Landing == null)
                        {
                            <span class="fa fa-cloud"></span>
                        }
                        else
                        {
                            <span class="fa fa-home"></span>
                        }
                    }
                    else
                    {
                        <span class="fa fa-trash-o"></span>
                    }
                </td>
                <td>
                    @if (!item.Deleted.HasValue)
                    {
                        if (item.Departure == null)
                        {
                            <text>1</text>
                        }
                        else if (item.Landing == null)
                        {
                            <text>4</text>
                        }
                        else
                        {
                            <text>6</text>
                        }
                    }
                    else
                    {
                        <text>9</text>
                    }
                </td>
                <td @style>
                    @Html.DisplayFor(modelItem => item.Plane, "Plane")
                </td>
                <td @style>
                    @trainingStatusIndicator
                    @Html.DisplayFor(modelItem => item, "Pilots")
                </td>
                <td @style>
                    @if (!item.Departure.HasValue && Request.IsPilot() && item.Date == DateTime.Today && item.IsCurrentClubPilots())
                    {
                        <div class="btn-group" style="white-space: nowrap;display: flex;">
                            @Html.ActionLink("-10", "Depart", new { id = item.FlightId, offSet = 10 }, new { title = DateTime.Now.AddMinutes(-10).ToString("HH:mm"), @class = "btn btn-warning", type = "button" })
                            @Html.ActionLink("-05", "Depart", new { id = item.FlightId, offSet = 5 }, new { title = DateTime.Now.AddMinutes(-5).ToString("HH:mm"), @class = "btn btn-warning", type = "button" })
                            @Html.ActionLink("Nu", "Depart", new { id = item.FlightId }, new { title = DateTime.Now.ToString("HH:mm"), @class = "btn btn-warning", type = "button" })
                        </div>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item, "Departure")
                    }
                </td>
                <td @style>
                    @if (!item.Landing.HasValue && Request.IsPilot() && item.Date == DateTime.Today && item.IsCurrentClubPilots())
                    {
                        <div class="btn-group" style="white-space: nowrap;display: flex;">
                            @Html.ActionLink("-10", "Land", new { id = item.FlightId, offSet = 10 }, new { title = DateTime.Now.AddMinutes(-10).ToString("HH:mm"), @class = "btn btn-warning", type = "button" })
                            @Html.ActionLink("-05", "Land", new { id = item.FlightId, offSet = 5 }, new { title = DateTime.Now.AddMinutes(-5).ToString("HH:mm"), @class = "btn btn-warning", type = "button" })
                            @Html.ActionLink("Nu", "Land", new { id = item.FlightId }, new { title = DateTime.Now.ToString("HH:mm"), @class = "btn btn-warning", type = "button" })
                        </div>

                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item, "Landing")
                    }
                </td>
                <td @style>
                    @Html.DisplayFor(modelItem => item, "Duration")
                </td>
                <td @style class="hidden-sm">
                    @Html.DisplayFor(modelItem => item, "StartedFrom")
                    @Html.DisplayFor(modelItem => item, "LandedOn")
                </td>
                <td @style class="hidden-sm">
                    @Html.DisplayFor(modelItem => item, "Tacho")
                </td>
                <td @style class="hidden-xs">
                    <span>
                        @if (Request.IsPilot() && item.IsCurrentClubPilots())
                        {
                            <a href="#" class="editComment btn btn-default hidden-print"><span class="fa fa-comment fa-fw"></span></a>
                        }
                        @Html.DisplayFor(modelItem => item.Description, "Description")
                    </span>
                    @if (Request.IsPilot() && item.IsCurrentClubPilots())
                    {
                        <span style="display:none;">
                            @using (Html.BeginForm("SetComment", "Flight"))
                            {
                                <input type="hidden" name="id" value="@item.FlightId" />
                                <input type="text" name="comment" value="@item.Description" />
                                <a href="#" class="setComment btn btn-primary">Gem</a>
                            }
                        </span>
                    }
                </td>
                <td class="hidden-print">
                    <div class="btn-group" style="white-space: nowrap;display: flex;">
                        @if (User.IsPilot() && item.IsCurrentClubPilots())
                        {
                            if (User.IsEditor() || item.Date.AddDays(3) >= DateTime.Now)
                            {
                                @Html.ActionLink(_("Edit"), "Edit", "Flight", new { id = item.FlightId }, new { @class = "btn btn-default", type = "button" }, "fa fa-pencil-square-o fa-fw")
                            }

                            @Html.ActionLink(" ", "Clone", "Flight", new { id = item.FlightId }, new { @class = "btn btn-default", type = "button", title = _("Clone") }, "fa fa-clipboard fa-fw")
                            @Html.ActionLink(" ", "Duplicate", "Flight", new { id = item.FlightId }, new { @class = "btn btn-default", type = "button", title = _("Copy") }, "fa fa-files-o fa-fw")
                            var btnclass = $"btn btn-default {(Request.IsInstructor() || User.IsAdministrator() ? "" : "disabled")} {(item.HasTrainingData ? "withtrainingdata" : "")}";
                            @Html.ActionLink(_(" "), "Edit", "TrainingLog", new { flightId = item.FlightId, }, new { @class = btnclass, type = "button", title = _("Training") }, "fa fa-graduation-cap fa-fw")
                        }
                        else
                        {
                            @Html.ActionLink(_("Details"), "Details", "Flight", new { id = item.FlightId }, new { @class = "btn btn-default", type = "button" })
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
