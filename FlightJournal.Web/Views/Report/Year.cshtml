@using FlightJournal.Web.Extensions
@model FlightJournal.Web.Models.ReportViewModel
@{
    var root = "/";
    if (Request.IsClub())
    {
        ViewBag.Title = _("Year report {0} {1}", Model.FormattedDate, Request.Club().Name);
        // When root Action has problems identifying that the date is already part of the path
        root = Url.Action("Index", "Report");
    }
    else
    {
        ViewBag.Title = _("Year report {0}", Model.FormattedDate);
    }
}
<p>
    <div class="btn-group">
        <a href="@Path.Combine(root, Model.Date.AddYears(-1).ToString("yyyy"))" class="btn btn-default">@Model.Date.AddYears(-1).ToString("yyyy")</a>
        <a href="@Path.Combine(root, Model.Date.ToString("yyyy"))" class="btn btn-info"><span class="glyphicon glyphicon-stats"></span> <strong>@Model.Date.ToString("yyyy")</strong></a>
        @foreach (var month in @Model.Flights.Select(d => d.Date.Month).Distinct().OrderBy(o => o))
        {
            <a href="@Path.Combine(root, Model.Date.AddMonths(month - 1).ToString("yyyy-MM"))" class="btn btn-default">@Model.Date.AddMonths(month - 1).ToString("MMMM")</a>
        }
        @if (DateTime.Today.Year >= Model.Date.AddYears(1).Year)
        {
            <a href="@Path.Combine(root, Model.Date.AddYears(1).ToString("yyyy"))" class="btn btn-default">@Model.Date.AddYears(1).ToString("yyyy")</a>
        }
    </div>
    @if (Model.Flights.Any())
    {
        <a href="@Url.Action("Export", "Report", new { year = Model.Date.Year })" class="btn btn-info pull-right"><span class="glyphicon glyphicon-cloud-download"></span> @_("Export startlist for {0}", @Model.FormattedDate)</a>
    }
</p>
@if (Model.Flights.Any())
{
    <h2>
        @_("Statistics for {0}", Model.FormattedDate)
    </h2>
    <table class="table table-bordered table-condensed table-hover table-striped">
        <thead>
            <tr>
                <th>
                </th>
                <th>
                    @*Total for @Model.Date.ToString("yyyy")*@
                </th>
                @for (int i = 1; i <= 12; i++)
                {
                    var month = new DateTime(Model.Date.Year, i, 1);
                    <th>
                        @if (Model.Flights.Any(f => f.Date.Month == i))
                        {
                            <a href="@Path.Combine(root, month.ToString("yyyy-MM"))">@month.ToString("MMM")</a>
                        }
                        else
                        {
                            @month.ToString("MMM")
                        }
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @_("Flight days")
                </td>
                <td align="right">
                    @Model.Flights.Select(s => s.Date).Distinct().Count()
                </td>
                @for (int i = 1; i <= 12; i++)
                {
                    var count = Model.Flights.Where(f => f.Date.Month == i).Select(s => s.Date).Distinct().Count();
                    <td align="right">
                        @(count != 0 ? count.ToString() : "")
                    </td>
                }
            </tr>

            @if (Request.IsClub())
            {
                <tr>
                    <td>
                        @_("Count")
                    </td>
                    <td align="right">
                        @{
                            int clubTotalFlights = Model.ClubFlights.Any() ? Model.ClubFlights.Sum(d => d.LandingCount) : 0;
                            int totalTotalFlights = Model.Flights.Sum(d => d.LandingCount);
                        }
                        @clubTotalFlights
                        @if (clubTotalFlights != totalTotalFlights)
                        {
                            var title = _("Other planes from/to {0}", Request.Club().Location.Name);
                            @Html.Raw(string.Format("<span title='{1}'>({0})</span>", totalTotalFlights - clubTotalFlights, title))
                        }
                    </td>
                    @for (int i = 1; i <= 12; i++)
                    {
                        int clubFlights = Model.ClubFlights.Any(f => f.Date.Month == i) ? Model.ClubFlights.Where(f => f.Date.Month == i).Sum(d => d.LandingCount) : 0;
                        int totalFlights = Model.Flights.Any(f => f.Date.Month == i) ? Model.Flights.Where(f => f.Date.Month == i).Sum(d => d.LandingCount) : 0;
                        <td align="right">
                            @if (totalFlights > 0)
                            {
                                @clubFlights
                                if (clubFlights != totalFlights)
                                {
                                    var title = _("Other planes from/to {0}", Request.Club().Location.Name);
                                    @Html.Raw(string.Format("<span title='{1}'>({0})</span>", totalFlights - clubFlights, title))
                                }
                            }
                        </td>
                    }
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        @_("Total Count")
                    </td>
                    <td align="right">
                        @Model.Flights.Sum(f => f.LandingCount)
                    </td>
                    @for (int i = 1; i <= 12; i++)
                    {
                        var count = Model.Flights.Any(f => f.Date.Month == i) ? Model.Flights.Where(f => f.Date.Month == i).Sum(f => f.LandingCount) : 0;
                        <td align="right">
                            @(count != 0 ? count.ToString() : "")
                        </td>
                    }
                </tr>
            }
            <tr>
                <td>
                    @_("Total Duration")
                </td>
                <td align="right">
                    @Model.ClubFlights.ToList().Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal()
                </td>
                @for (int i = 1; i <= 12; i++)
                {
                    <td align="right">
                        @Model.ClubFlights.Where(f => f.Date.Month == i).ToList().Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal()
                    </td>
                }
            </tr>
            <tr>
                <td>
                    @_("Total Pilots")
                </td>
                <td align="right">
                    @Model.QueryableClubFlights.Select(s => s.Pilot).Union(Model.QueryableClubFlights.Where(s => s.PilotBackseat != null).Select(s => s.PilotBackseat).Distinct()).Distinct().Count()
                </td>
                @for (int i = 1; i <= 12; i++)
                {
                    var count = Model.QueryableClubFlights.Where(f => f.Date.Month == i).Select(s => s.Pilot).Union(Model.QueryableClubFlights.Where(s => s.Date.Month == i && s.PilotBackseat != null).Select(s => s.PilotBackseat).Distinct()).Distinct().Count();
                    <td align="right">
                        @(count != 0 ? count.ToString() : "")
                    </td>
                }
            </tr>
            @if (Model.ClubFlights.Any(w => w.TaskDistance.HasValue && w.TaskDistance.Value > 0))
            {
                <tr>
                    <td>
                        @_("Cross country")
                    </td>
                    <td align="right">
                        @Model.ClubFlights.Count(w => w.TaskDistance.HasValue && w.TaskDistance.Value > 0)
                    </td>
                    @for (int i = 1; i <= 12; i++)
                    {
                        <td align="right">
                            @Model.ClubFlights.Count(w => w.Date.Month == i && w.TaskDistance.HasValue && w.TaskDistance.Value > 0)
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        @_("Cross country Distance(km)")
                    </td>
                    <td align="right">
                        @Model.ClubFlights.Where(w => w.TaskDistance.HasValue && w.TaskDistance.Value > 0).Sum(d => d.TaskDistance)
                    </td>
                    @for (int i = 1; i <= 12; i++)
                    {
                        <td align="right">
                            @Model.ClubFlights.Where(w => w.Date.Month == i && w.TaskDistance.HasValue && w.TaskDistance.Value > 0).Sum(d => d.TaskDistance)
                        </td>
                    }
                </tr>
            }
            @if (!Request.IsClub())
            {
                foreach (var club in Model.Clubs) //var x = Model.Flights.GroupBy(f => f.Pilot.Club).OrderByDescending(o => o.Count());
                {
                    <tr>
                        <td>
                            <a href="@Path.Combine(root, club.Key.ShortName, Model.Date.ToString("yyyy"))">@club.Key.Name</a>
                        </td>
                        <td align="right">
                            @if (club.Any())
                            {
                                var duration = club.Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal();
                                if (duration.Length == 4)
                                {
                                    duration = "0" + duration;
                                }
                                if (duration.Length == 5)
                                {
                                    duration = "0" + duration;
                                }

                                @club.Sum(f => f.LandingCount)
                                @Html.Raw(" / ")
                                @duration
                            }
                        </td>
                        @for (int i = 1; i <= 12; i++)
                        {
                            <td align="right">
                                @if (club.Any(f => f.Date.Month == i))
                                {
                                    var month = new DateTime(Model.Date.Year, i, 1);
                                    var duration = club.Where(f => f.Date.Month == i).Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal();
                                    if (duration.Length == 4)
                                    {
                                        duration = "0" + duration;
                                    }
                                    if (duration.Length == 5)
                                    {
                                        duration = "0" + duration;
                                    }
                                    <a href="@Path.Combine(root, club.Key.ShortName, month.ToString("yyyy-MM"))">
                                        @club.Where(f => f.Date.Month == i).Sum(f => f.LandingCount)
                                        @Html.Raw(" / ")
                                        @duration
                                    </a>
                                }
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>

    if (Request.IsClub())
    {
        <h3>@_("Pilot statistics")</h3>
        <table class="tablesorter table table-striped table-hover table-condensed table-bordered">
            <thead>
                <tr>
                    <th>
                        @_("Pilot")
                    </th>
                    <th>
                        @_("Count")
                    </th>
                    <th>
                        @_("Duration")
                    </th>
                    <th colspan="2">
                        Jan
                    </th>
                    <th colspan="2">
                        Feb
                    </th>
                    <th colspan="2">
                        Mar
                    </th>
                    <th colspan="2">
                        Apr
                    </th>
                    <th colspan="2">
                        Maj
                    </th>
                    <th colspan="2">
                        Jun
                    </th>
                    <th colspan="2">
                        Jul
                    </th>
                    <th colspan="2">
                        Aug
                    </th>
                    <th colspan="2">
                        Sep
                    </th>
                    <th colspan="2">
                        Okt
                    </th>
                    <th colspan="2">
                        Nov
                    </th>
                    <th colspan="2">
                        Dec
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in from c in Model.ClubFlights.OrderBy(d => d.Pilot.Name)
                                     group c by new { c.Pilot.PilotId } into g
                                     select new { Pilot = g.First().Pilot, ItemFlights = g })
                {
                    <tr>
                        <td>
                            @item.Pilot.Name
                        </td>
                        <td align="right">
                            @item.ItemFlights.Sum(f => f.LandingCount)
                        </td>
                        <td align="right">
                            @{
                                var duration = item.ItemFlights.Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal();
                                if (duration.Length == 4)
                                {
                                    duration = "0" + duration;
                                }
                                if (duration.Length == 5)
                                {
                                    duration = "0" + duration;
                                }
                            }
                            @duration
                        </td>
                        @for (int i = 1; i <= 12; i++)
                        {
                            var count = item.ItemFlights.Where(f => f.Date.Month == i).Sum(f => f.LandingCount);
                            <td align="right">
                                @(count != 0 ? count.ToString() : "")
                            </td>
                            <td align="right">
                                @item.ItemFlights.Where(f => f.Date.Month == i).Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal()
                            </td>
                        }
                    </tr>
                }
                @foreach (var item in from c in Model.ClubFlights.Where(d => d.PilotBackseat != null).OrderBy(d => d.PilotBackseat.Name)
                                     group c by new { c.PilotBackseat.PilotId } into g
                                     select new { Pilot = g.First().PilotBackseat, ItemFlights = g })
                {
                    <tr>
                        <td>
                            @_("{0} (Co-Pilot)", item.Pilot.Name)
                        </td>
                        <td align="right">
                            @item.ItemFlights.Sum(f => f.LandingCount)
                        </td>
                        <td align="right">
                            @{
                                var duration = item.ItemFlights.Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal();
                                if (duration.Length == 4)
                                {
                                    duration = "0" + duration;
                                }
                                if (duration.Length == 5)
                                {
                                    duration = "0" + duration;
                                }
                            }
                            @duration
                        </td>
                        @for (int i = 1; i <= 12; i++)
                        {
                            var count = item.ItemFlights.Where(f => f.Date.Month == i).Sum(f => f.LandingCount);
                            <td align="right">
                                @(count != 0 ? count.ToString() : "")
                            </td>
                            <td align="right">
                                @item.ItemFlights.Where(f => f.Date.Month == i).Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal()
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>

        Html.RenderPartial("_Logbook", Model);

        <div class="text-center hidden-print">
            <a href="@Url.Action("Export", "Report", new { year = Model.Date.Year })" class="btn btn-info"><span class="glyphicon glyphicon-cloud-download"></span> @_("Export startlist for {0}", @Model.FormattedDate)</a>
        </div>
        <br style="page-break-after: always;" />
    }
    else //if (Request.IsClub())
    {
        <p>
            @foreach (var club in Model.Clubs)
            {
                <a href="@Path.Combine(root, club.Key.ShortName, Model.Date.ToString("yyyy"))" class="btn btn-primary">@Html.Raw(_("{0} {1} take-offs {2} hours", club.Key.Name, club.Sum(f=>f.LandingCount), club.ToList().Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal()))</a>
            }
        </p>
    }
}
else //@if (Model.Flights.Any())
{
    <h2>
        @_("Statistics for {0}", @Model.FormattedDate)
    </h2>
    <p>@_("No flights registered")</p>
}
@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $(".tablesorter").tablesorter();
        });
    </script>
}
