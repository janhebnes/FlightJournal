@using FlightJournal.Web.Extensions
@using FlightJournal.Web.Models
@model FlightJournal.Web.Models.ReportViewModel
@{
    var root = "/";
    if (Request.IsClub())
    {
        ViewBag.Title = _("Month report {0} {1}", Model.FormattedDate, Request.Club().Name);
        // When root Action has problems identifying that the date is allready part of the path
        root = Url.Action("Index", "Report");
    }
    else
    {
        ViewBag.Title = _("Month report {0}", Model.FormattedDate);
    }
}
<p>
    <div class="btn-group">
        <a href="@Path.Combine(root, Model.Date.ToString("yyyy"))" class="btn btn-default">@Model.Date.ToString("yyyy")</a>
        <a href="@Path.Combine(root, Model.Date.AddMonths(-1).ToString("yyyy-MM"))" class="btn btn-default">@Model.Date.AddMonths(-1).ToString("MMMM")</a>
        <a href="@Path.Combine(root, Model.Date.ToString("yyyy-MM"))" class="btn btn-info"><span class="glyphicon glyphicon-stats"></span> <strong>@Model.Date.ToString("MMMM")</strong></a>
        @if (DateTime.Today > Model.Date.AddMonths(1))
        {
            <a href="@Path.Combine(root, Model.Date.AddMonths(1).ToString("yyyy-MM"))" class="btn btn-default">@Model.Date.AddMonths(1).ToString("MMMM")</a>
        }
        @if (DateTime.Today.Year >= Model.Date.AddYears(1).Year)
        {
            <a href="@Path.Combine(root, Model.Date.AddYears(1).ToString("yyyy"))" class="btn btn-default">@Model.Date.AddYears(1).ToString("yyyy")</a>
        }
    </div>
    @if (Request.IsPilot() && Model.Flights.Any())
    {
        <a href="@Url.Action("Export", "Report", new { year = Model.Date.Year, month = Model.Date.Month })" class="btn btn-info pull-right"><span class="glyphicon glyphicon-cloud-download"></span> @_("Export startlist for {0}", @Model.FormattedDate)</a>
    }
</p>
@if (Model.Flights.Any())
{
    var dateCount = Model.Flights.Select(s => s.Date).Distinct().Count();
    var dates = Model.Flights.Select(s => s.Date).Distinct().OrderBy(o => o.Date);
    <h2>
        @_("Statistics for {0}", Model.FormattedDate)
    </h2>
    <table class="table table-condensed table-striped ">
        <tr>
            <td>
                @_("Flight days")
            </td>
            <td align="right">@Model.Flights.Select(s => s.Date).Distinct().Count()</td>

            @foreach (var source in dates)
            {
                var reportUrl = "/" + source.ToString("yyyy-MM-dd");
                if (Request.IsClub())
                {
                    reportUrl = "/" + Request.Club().ShortName + reportUrl;
                }
                <td align="right">

                    <a href="@reportUrl">
                        @if (dateCount > 10)
                        {
                            @source.ToString("dd")
                        }
                        else if (dateCount > 5)
                        {
                            @source.ToString("M")
                        }
                        else
                        {
                            @source.ToString("d")
                        }
                    </a>
                </td>
            }
        </tr>
        @if (Request.IsClub())
        {
            <tr>
                <td>
                    @_("Count")
                </td>
                <td align="right">
                    @{
                        int clubTotalFlights = Model.ClubFlights.Any() ? Model.ClubFlights.Sum(d => d.LandingCount) : 0;
                        int totalTotalFlights = Model.Flights.Sum(d => d.LandingCount);
                    }
                    @clubTotalFlights
                    @if (clubTotalFlights != totalTotalFlights)
                    {
                        var title = _("Other planes from/to {0}", Request.Club().Location.Name);
                        @Html.Raw(string.Format("<span title='{1}'>({0})</span>", totalTotalFlights - clubTotalFlights, title))
                    }
                </td>
                @foreach (var date in dates)
                {
                    <td align="right">
                        @{
                            int clubFlights = Model.ClubFlights.Any(d => d.Date == date) ? Model.ClubFlights.Where(d => d.Date == date).Sum(d => d.LandingCount) : 0;
                            int totalFlights = Model.Flights.Any(d => d.Date == date) ? Model.Flights.Where(d => d.Date == date).Sum(d => d.LandingCount) : 0;
                        }
                        @clubFlights
                        @if (clubFlights != totalFlights)
                        {
                            var title = _("Other planes from/to {0}", Request.Club().Location.Name);
                            @Html.Raw(string.Format("<span title='{1}'>({0})</span>", totalFlights - clubFlights, title))
                        }
                    </td>
                }
            </tr>
        }
        else
        {
            <tr>
                <td>
                    @_("Total Count")
                </td>
                <td align="right">@Model.Flights.Sum(d => d.LandingCount)</td>
                @foreach (var date in dates)
                {
                    <td align="right">
                        @Model.Flights.Where(d => d.Date == date).Sum(d => d.LandingCount)
                    </td>
                }
            </tr>
        }
        <tr>
            <td>
                @_("Total Duration")
            </td>
            <td align="right">
                @Model.ClubFlights.ToList().Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal()
            </td>
            @foreach (var date in dates)
            {
                <td align="right">
                    @Model.ClubFlights.Where(d => d.Date == date).ToList().Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal()
                </td>
            }
        </tr>
        @*Disabled for now until we find more performance over winter*@
        @*<tr>
            <td>
                @_("Total Pilots")
            </td>
            <td align="right">@Model.QueryableClubFlights.Select(s => s.Pilot).Union(Model.QueryableClubFlights.Where(s => s.PilotBackseat != null).Select(s => s.PilotBackseat).Distinct()).Distinct().Count()</td>
            @foreach (var date in dates)
            {
                <td align="right">
                    @Model.QueryableClubFlights.Where(s => s.Date == date).Select(s => s.Pilot).Union(Model.QueryableClubFlights.Where(s => s.Date == date && s.PilotBackseat != null).Select(s => s.PilotBackseat).Distinct()).Distinct().Count()
                </td>
            }
        </tr>*@
        @if (Model.ClubFlights.Any(w => w.TaskDistance.HasValue && w.TaskDistance.Value > 0))
        {
            <tr>
                <td>
                    @_("Cross country")
                </td>
                <td align="right">
                    @Model.ClubFlights.Count(w => w.TaskDistance.HasValue && w.TaskDistance.Value > 0)
                </td>
                @foreach (var date in dates)
                {
                    <td align="right">
                        @Model.ClubFlights.Count(w => w.Date == date && w.TaskDistance.HasValue && w.TaskDistance.Value > 0)
                    </td>
                }
            </tr>
            <tr>
                <td>
                    @_("Cross country Distance(km)")
                </td>
                <td align="right">
                    @Model.ClubFlights.Where(w => w.TaskDistance.HasValue && w.TaskDistance.Value > 0).Sum(d => d.TaskDistance)
                </td>
                @foreach (var date in dates)
                {
                    <td align="right">
                        @Model.ClubFlights.Where(w => w.Date == date && w.TaskDistance.HasValue && w.TaskDistance.Value > 0).Sum(d => d.TaskDistance)
                    </td>
                }
            </tr>
        }
        @if (!Request.IsClub())
        {
            foreach (var club in Model.Clubs)
            {
                <tr>
                    <td>
                        <a href="@Path.Combine(root, club.Key.ShortName, Model.Date.ToString("yyyy-MM"))">@club.Key.Name</a>
                    </td>
                    <td align="right">
                        @if (club.Any())
                        {
                            var duration = club.Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal();
                            if (duration.Length == 4)
                            {
                                duration = "0" + duration;
                            }
                            if (duration.Length == 5)
                            {
                                duration = "0" + duration;
                            }

                            @club.Sum(f => f.LandingCount)
                            @Html.Raw(" / ")
                            @duration
                        }
                    </td>
                    @foreach (var date in dates)
                    {
                        <td align="right">
                            @if (club.Any(f => f.Date == date))
                            {
                                var duration = club.Where(f => f.Date == date).Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal();
                                if (duration.Length == 4)
                                {
                                    duration = "0" + duration;
                                }
                                if (duration.Length == 5)
                                {
                                    duration = "0" + duration;
                                }
                                <a href="@Path.Combine(root, club.Key.ShortName, date.ToString("yyyy-MM-dd"))">
                                    @club.Where(f => f.Date == date).Sum(f => f.LandingCount)
                                    @Html.Raw(" / ")
                                    @duration
                                </a>
                            }
                        </td>
                    }
                </tr>
            }
        }
    </table>

    if (Request.IsClub())
    {
        <h3>@_("Pilot statistics")</h3>
        <table class="tablesorter table table-striped table-hover table-condensed table-bordered">
            <thead>
                <tr>
                    <th>
                        @_("Pilot")
                    </th>
                    <th>
                        @_("Count")
                    </th>
                    <th>
                        @_("Duration")
                    </th>
                    @foreach (var source in dates)
                    {
                        var reportUrl = "/" + source.ToString("yyyy-MM-dd");
                        if (Request.IsClub())
                        {
                            reportUrl = "/" + Request.Club().ShortName + reportUrl;
                        }
                        <th align="right" colspan="2">

                            <a href="@reportUrl">
                                @if (dateCount > 10)
                                {
                                    @source.ToString("dd")
                                }
                                else if (dateCount > 5)
                                {
                                    @source.ToString("M")
                                }
                                else
                                {
                                    @source.ToString("d")
                                }
                            </a>
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in from c in Model.ClubFlights.OrderBy(d=>d.Pilot.Name)
                                     group c by new { c.Pilot.PilotId } into g
                                     select new { Pilot = g.First().Pilot, ItemFlights = g })
                {
                    <tr>
                        <td>
                            @item.Pilot.MaskedName(Request.IsPilot())
                        </td>
                        <td align="right">
                            @item.ItemFlights.Sum(f => f.LandingCount)
                        </td>
                        <td align="right">
                            @{
                                var duration = item.ItemFlights.Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal();
                                if (duration.Length == 4)
                                {
                                    duration = "0" + duration;
                                }
                                if (duration.Length == 5)
                                {
                                    duration = "0" + duration;
                                }
                            }
                            @duration
                        </td>
                        @foreach (var source in dates)
                        {
                            var count = item.ItemFlights.Where(f => f.Date == source).Sum(f => f.LandingCount);
                            <td align="right">
                                @(count != 0 ? count.ToString() : "")
                            </td>
                            <td align="right">
                                @item.ItemFlights.Where(f => f.Date == source).Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal()
                            </td>
                        }
                    </tr>
                }
                @foreach (var item in from c in Model.ClubFlights.Where(d => d.PilotBackseat != null).OrderBy(d => d.PilotBackseat.Name)
                                     group c by new { c.PilotBackseat.PilotId } into g
                                     select new { Pilot = g.First().PilotBackseat, ItemFlights = g })
                {
                    <tr>
                        <td>
                            @_("{0} (Co-Pilot)", item.Pilot.MaskedName(Request.IsPilot()))
                        </td>
                        <td align="right">
                            @item.ItemFlights.Sum(f => f.LandingCount)
                        </td>
                        <td align="right">
                            @{
                                var duration = item.ItemFlights.Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal();
                                if (duration.Length == 4)
                                {
                                    duration = "0" + duration;
                                }
                                if (duration.Length == 5)
                                {
                                    duration = "0" + duration;
                                }
                            }
                            @duration
                        </td>
                        @foreach (var source in dates)
                        {
                            var count = item.ItemFlights.Where(f => f.Date == source).Sum(f => f.LandingCount);
                            <td align="right">
                                @(count != 0 ? count.ToString() : "")
                            </td>
                            <td align="right">
                                @item.ItemFlights.Where(f => f.Date == source).Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal()
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>

        Html.RenderPartial("_Logbook", Model);

        if (Request.IsPilot())
        {
            <div class="text-center hidden-print">
                <a href="@Url.Action("Export", "Report", new { year = Model.Date.Year, month = Model.Date.Month })" class="btn btn-info"><span class="glyphicon glyphicon-cloud-download"></span> @_("Export startlist for {0}", @Model.FormattedDate)</a>
            </div>
        }
        <br style="page-break-after: always;" />

        if (Model.DistinctLocations.Count() > 1)
        {
            <div class="btn-group">
                @foreach (var item in Model.DistinctLocations)
                {
                    <a href="#@item.LocationId" class="btn btn-default">@item.ToString(Request.Club().Country)</a>
                }
            </div>
        }
        foreach (var location in Model.DistinctLocations)
        {
            <a name="@location.LocationId"></a>
            <h2>
                @location.ToString(Request.Club().Country) @Model.FormattedDate
            </h2>
            <table class="tablesorter table table-responsive table-striped table-hover table-condensed">
                <thead>
                    <tr>
                        <th>
                            @_("Date")
                        </th>
                        <th>
                            @_("Plane")
                        </th>
                        <th>
                            @_("Pilot(s)")
                        </th>
                        <th>
                            @_("Departure")
                        </th>
                        <th class="hidden-xs">
                            @_("Landing")
                        </th>
                        <th>
                            @_("Duration")
                        </th>
                        <th class="hidden-xs hidden-sm">
                            @_("Tacho")
                        </th>
                        <th class="hidden-xs">
                            @_("Description")
                        </th>
                        <th class="hidden-print">
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ClubFlights.Where(d => d.StartedFromId == location.LocationId).OrderBy(d=>d.Date).ThenBy(d=>d.Departure))
                    {
                        <tr>
                            <td>
                                @item.Date.ToString("dd-MMM")
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Plane)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item, "Pilots")
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item, "Departure")
                            </td>
                            <td class="hidden-xs">
                                @Html.DisplayFor(modelItem => item, "Landing")
                                @Html.DisplayFor(modelItem => item, "LandedOn")
                            </td>
                            <td>
                                @item.Duration.TotalHoursWithMinutesAsDecimal()
                            </td>
                            <td class="hidden-xs hidden-sm text-right">
                                @Html.DisplayFor(modelItem => item, "Tacho")
                            </td>
                            <td class="hidden-xs">
                                @Html.DisplayFor(modelItem => item.Description, "Description")
                            </td>
                            <td class="hidden-print">
                                @if (Request.IsPilot()){
                                    @Html.ActionLink(_("Details"), "Details", "Flight", new { id = item.FlightId }, new { @class = "btn btn-default btn-xs" })
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
    else // @if (Request.IsClub())
    {
        <p>
            @foreach (var club in Model.Clubs)
            {
                <a href="@Path.Combine(root, club.Key.ShortName, Model.Date.ToString("yyyy-MM"))" class="btn btn-primary">@Html.Raw(_("{0} {1} take-offs {2} hours", club.Key.Name, club.Sum(f => f.LandingCount), club.ToList().Sum(f => f.Duration.Ticks).TotalHoursWithMinutesAsDecimal()))</a>
            }
        </p>
    }
}
else //@if (Model.Flights.Any())
{
    <h2>
        @_("Statistics for {0}", @Model.FormattedDate)
    </h2>
    <p>@_("No flights registered")</p>
}
@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $(".tablesorter").tablesorter();
        });
    </script>
}

