@using FlightJournal.Web.Extensions
@using RestSharp.Extensions
@model IEnumerable<FlightJournal.Web.Models.Pilot>
@{
    ViewBag.Title = "Index";
}
@if (!User.IsManager())
{
    <div class="col-md-6">
        <div class="alert alert-danger" style="margin-top: 10px">
            <span class="glyphicon glyphicon-alert"></span> Du kan kun redigere piloterne i din egen klub hvis du er klub manager.
        </div>
    </div>
    <div class="clearfix"></div>
}
else
{
    <div class="pull-right alert alert-warning text-right"><span class="glyphicon glyphicon-warning-sign"></span> Bemærk at piloter kun kan redigeres af manager i klubben. De deles ikke på tværs af klubberne. <br />Det forventes at piloter oprettes dobbelt ved dobbelt medlemskaber (er ikke færdig implementeret).</div>

    <h2>Piloter <small>@(Request.IsClub() ? @Request.Club().Name : string.Empty)</small></h2>

    <p>
        @Html.ActionLink("Opret pilot", "Create", null, new { @class = "btn btn-primary" })
    </p>
    <table class="table table-striped table-hover table-condensed">
        <tr>
            <th>
                Navn
            </th>
            <th>
                E-mail
            </th>
            <th>
                Mobilnr
            </th>
            <th>
                Medlemsnr
            </th>
            @if (User.IsAdministrator())
            {
                <th>
                    Klub
                </th>
            }
            <th>
                Unionsnr
            </th>
            <th>
                FI(S)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (item.ExitDate.HasValue)
                    {
                        <span style="text-decoration: line-through;">@Html.DisplayFor(modelItem => item.Name)</span> <small style="color:#808080;">ExitDate: @item.ExitDate.Value.ToString("dd-MMM-yyyy")</small>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Name)
                    }
                </td>
                <td>
                    @if (!string.IsNullOrWhiteSpace(item.Email))
                    {
                        @Html.DisplayFor(modelItem => item.Email)
                    }
                    else
                    {
                        using (Html.BeginForm("SetEmail", "Pilot"))
                        {
                            @Html.HiddenFor(modelItem => item.PilotId)
                            @Html.EditorFor(modelItem => item.Email)
                            <button type="submit" class="btn btn-default btn-sm" onclick=" setData(this) "><span class="glyphicon glyphicon-edit"></span></button>
                        }
                    }
                </td>
                <td>
                    @if (!string.IsNullOrWhiteSpace(item.MobilNumber))
                    {
                        @Html.DisplayFor(modelItem => item.MobilNumber)
                    }
                    else
                    {
                        using (Html.BeginForm("SetMobilNumber", "Pilot"))
                        {
                            @Html.HiddenFor(modelItem => item.PilotId)
                            @Html.EditorFor(modelItem => item.MobilNumber)
                            <button type="submit" class="btn btn-default btn-sm" onclick=" setData(this) "><span class="glyphicon glyphicon-edit"></span></button>
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MemberId)
                </td>
                @if (User.IsAdministrator())
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Club.ShortName)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.UnionId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InstructorId)
                </td>
                <td>
                    <div class="btn-group btn-group-sm">
                        @Html.ActionLink("Rediger", "Edit", new { id = item.PilotId }, new { @class = "btn btn-default" })
                        @*@Html.ActionLink("Details", "Details", new { id = item.PilotId }, new { @class = "btn btn-default" })*@
                        @Html.ActionLink("Slet", "Delete", new { id = item.PilotId }, new { @class = "btn btn-default" })
                    </div>
                </td>
            </tr>
        }

    </table>
}

@section scripts
{
    <script>
        function ConvertFormToJSON(form) {
            var array = jQuery(form).serializeArray();
            var json = {};

            jQuery.each(array, function() {
                var parsedname = this.name + "";
                parsedname = parsedname.substring(5); // removing "input." from the source
                json[parsedname] = this.value || "";
            });

            return json;
        }

        function setData(submitbutton) {
            event.preventDefault();

            var json = ConvertFormToJSON(submitbutton.form);
            $.ajax({
                type: "POST",
                url: submitbutton.form.action,
                data: json,
                dataType: "json"
            }).done(function(result) {
                if (result.Success) {
                    $(submitbutton).removeClass("btn-default").addClass("btn-success");
                    $($(submitbutton).children('span')[0]).removeClass("glyphicon-edit").addClass("glyphicon-check");
                    setTimeout(function () {
                        $(submitbutton).removeClass("btn-success").addClass("btn-default");
                        $($(submitbutton).children('span')[0]).removeClass("glyphicon-check").addClass("glyphicon-edit");
                    }, 1500);
                } else {
                    $(submitbutton).removeClass("btn-default").addClass("btn-warning");
                    setTimeout(function () {
                        $(submitbutton).removeClass("btn-warning").addClass("btn-default");
                    }, 1500);
                }

            }).error(function() {
                alert("Error");
                $(submitbutton).removeClass("btn-primary").addClass("btn-warning");
            });
        }
    </script>
}